<?php

/**
 * @file
 * Contains hooks for Paragraphs Feature module.
 */

use Drupal\Core\Field\FieldDefinitionInterface;
use Drupal\Core\Field\WidgetInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\paragraphs\Plugin\Field\FieldWidget\ParagraphsWidget;
use Drupal\paragraphs_features\ParagraphsFeatures;

/**
 * Implements hook_field_widget_multivalue_form_alter().
 */
function paragraphs_features_field_widget_multivalue_form_alter(array &$elements, FormStateInterface $form_state, array $context) {
  /** @var \Drupal\paragraphs\Plugin\Field\FieldWidget\ParagraphsWidget $widget */
  $widget = $context['widget'];
  if (!($widget instanceof ParagraphsWidget)) {
    return;
  }

  if ($widget->getSetting('add_mode') === 'modal') {
    $fieldWrapperId = ParagraphsFeatures::getWrapperId($context['form']['#parents'], $elements['#field_name']);
    ParagraphsFeatures::registerFormWidgetFeatures($elements, $widget, $fieldWrapperId);
  }
}

/**
 * Implements hook_field_widget_third_party_settings_form().
 */
function paragraphs_features_field_widget_third_party_settings_form(WidgetInterface $plugin, FieldDefinitionInterface $field_definition, $form_mode, $form, FormStateInterface $form_state) {
  $elements = [];

  if ($plugin instanceof ParagraphsWidget) {
    $elements = ParagraphsFeatures::getThirdPartyForm($plugin, $field_definition->getName());
  }

  return $elements;
}

/**
 * Implements hook_paragraphs_behavior_info_alter().
 */
function paragraphs_features_paragraphs_widget_actions_alter(array &$widget_actions, array &$context) {
  /** @var \Drupal\paragraphs\Entity\Paragraph $paragraphs_entity */
  $paragraphs_entity = $context['paragraphs_entity'];

  foreach ($widget_actions as $grouping => $buttons) {
    foreach ($buttons as $button_id => $button_element) {
      if ($button_id === 'remove_button') {
        $widget_actions[$grouping][$button_id]['#attributes']['data-paragraphs-split-text-type'] = $paragraphs_entity->getType();

        break 2;
      }
    }
  }
}
